#using conditions in ansible playbook
# #conditions are used to execute tasks based on certain conditions
- name: conditions
  hosts: localhost
  become: true  #become is used to run the task as a different user, in this case, root user
  tasks: 
  - name: check if user akhila exist or not
    ansible.builtin.command: id akhila  #command module is used to run a command on the remote host
    ignore_errors: true  #ignore_errors is used to ignore the error if the command fails,
    register: user_check  #register is used to store the output of the command in a variable called user_check

  - name: print variable user_check output
    ansible.builtin.debug:
      msg: "User check output is {{user_check}}"  #stdout is used to get the output of the command

  - name: print exit status or return code
    ansible.builtin.debug:
      msg: "return code is {{user_check.rc}}"  #rc is used to get the return code of the command, 0 means success and non-zero means failure    

  - name: create user if not exist
    ansible.builtin.user:
      name: akhila
      state: present  #present means the user will be created if it does not exist, if it exists, it will not do anything
    when: user_check.rc !=0  #when is used to execute the task only if the condition is true  

